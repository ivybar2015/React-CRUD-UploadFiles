{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\ReactWebApp\\\\React-CRUD-UploadFiles\\\\CRUDAPP\\\\src\\\\components\\\\Auth\\\\Edit.js\";\nimport React, { Component } from \"react\"; //import BrowserRouter from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport \"./authlayout.css\";\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {// usernname and password have to match with variable name declared at web api\n      // declare  list\n      //  data: [],\n      //  Id: props.match.params.id,\n      //  username: \"\",\n      //    firstname: \"\",\n      //  lastname: \"\",\n    }; // let bind to funtion update value\n\n    this.userName = this.userName.bind(this);\n    this.firstName = this.firstName.bind(this);\n    this.lastName = this.lastName.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  userName(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  firstName(event) {\n    this.setState({\n      firstname: event.target.value\n    });\n  }\n\n  lastName(event) {\n    this.setState({\n      lastname: event.target.value\n    });\n  }\n\n  handleCancel() {\n    //   this.setState({ username: event.target.value });\n    this.props.history.push('/listuser');\n  }\n\n  onSubmit(event) {\n    // We can use the `useParams` hook here to access the dynamic pieces of the URL.\n    event.preventDefault();\n    const apiurl = \"http://localhost:62458/api/user/update\";\n    const recored = {\n      //get id passe\n      Id: this.props.match.params.id,\n      username: this.state.username,\n      firstname: this.state.firstname,\n      lastname: this.state.lastname\n    };\n    axios.post(apiurl, recored).then(res => {\n      console.log(res.dbase); //this.setState({ data: res.data.dbase })\n      // go to listuser page\n\n      this.props.history.push('/listuser');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, \" User Name  \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"username\" // holde current value\n      ,\n      value: this.state.username // name have to match with username of state and will hole username 'input'\n      ,\n      name: \"Username\",\n      placeholder: \"User Name\" // after got input call  handleChange() and  passing  'event'\n      ,\n      onChange: this.userName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"di\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \" First Name  \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"firstname\" // holde current value\n      ,\n      value: this.state.firstname // name have to match with username of state and will hole username 'input'\n      ,\n      name: \"Firstname\",\n      placeholder: \"User Name\" // after got input call  handleChange() and  passing  'event'\n      ,\n      onChange: this.firstName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, \" Last Name  \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"lastname\" // holde current value\n      ,\n      value: this.state.lastname // name have to match with username of state and will hole username 'input'\n      ,\n      name: \"Username\",\n      placeholder: \"Last Name\" // after got input call  handleChange() and  passing  'event'\n      ,\n      onChange: this.lastName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      color: \"primary\",\n      value: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, \"Cancel \")))));\n  }\n\n}\n\nexport default Edit;","map":{"version":3,"sources":["C:/Projects/ReactWebApp/React-CRUD-UploadFiles/CRUDAPP/src/components/Auth/Edit.js"],"names":["React","Component","axios","Edit","constructor","props","state","userName","bind","firstName","lastName","onSubmit","handleCancel","event","setState","username","target","value","firstname","lastname","history","push","preventDefault","apiurl","recored","Id","match","params","id","post","then","res","console","log","dbase","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n//import BrowserRouter from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./authlayout.css\";\r\n\r\nclass Edit extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            // usernname and password have to match with variable name declared at web api\r\n            // declare  list\r\n            //  data: [],\r\n            //  Id: props.match.params.id,\r\n            //  username: \"\",\r\n            //    firstname: \"\",\r\n            //  lastname: \"\",\r\n        };\r\n\r\n        // let bind to funtion update value\r\n        this.userName = this.userName.bind(this);\r\n        this.firstName = this.firstName.bind(this);\r\n        this.lastName = this.lastName.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n    }\r\n\r\n    userName(event) {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    firstName(event) {\r\n        this.setState({ firstname: event.target.value });\r\n    }\r\n\r\n    lastName(event) {\r\n        this.setState({ lastname: event.target.value });\r\n    }\r\n\r\n    handleCancel() {\r\n        //   this.setState({ username: event.target.value });\r\n        this.props.history.push('/listuser')\r\n    }\r\n    onSubmit(event) {\r\n        // We can use the `useParams` hook here to access the dynamic pieces of the URL.\r\n\r\n        event.preventDefault();\r\n        const apiurl = \"http://localhost:62458/api/user/update\";\r\n        const recored = {\r\n\r\n            //get id passe\r\n            Id: this.props.match.params.id,\r\n            username: this.state.username,\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname\r\n\r\n        }\r\n\r\n        axios.post(apiurl, recored)\r\n            .then(res => {\r\n                console.log(res.dbase)\r\n                //this.setState({ data: res.data.dbase })\r\n                // go to listuser page\r\n                this.props.history.push('/listuser')\r\n\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"input-form\">\r\n                <React.Fragment>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div>\r\n                            <label> User Name  </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                // holde current value\r\n                                value={this.state.username}\r\n                                // name have to match with username of state and will hole username 'input'\r\n                                name=\"Username\"\r\n                                placeholder=\"User Name\"\r\n                                // after got input call  handleChange() and  passing  'event'\r\n                                onChange={this.userName}\r\n                            ></input>\r\n                            <br></br>\r\n\r\n                        </div>\r\n                        <di>\r\n                            <label> First Name  </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"firstname\"\r\n                                // holde current value\r\n                                value={this.state.firstname}\r\n                                // name have to match with username of state and will hole username 'input'\r\n                                name=\"Firstname\"\r\n                                placeholder=\"User Name\"\r\n                                // after got input call  handleChange() and  passing  'event'\r\n                                onChange={this.firstName}\r\n                            ></input>\r\n                        </di>\r\n                        <br></br>\r\n\r\n                        <div>\r\n                            <label> Last Name  </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"lastname\"\r\n                                // holde current value\r\n                                value={this.state.lastname}\r\n                                // name have to match with username of state and will hole username 'input'\r\n                                name=\"Username\"\r\n                                placeholder=\"Last Name\"\r\n                                // after got input call  handleChange() and  passing  'event'\r\n                                onChange={this.lastName}\r\n                            ></input>\r\n                            <br></br>\r\n                        </div>\r\n\r\n                        <br />\r\n                        {/* put button on the form 'finished' */}\r\n                        <div className=\"text-right\"   >\r\n                            <input\r\n\r\n                                type=\"submit\"\r\n                                color=\"primary\"\r\n                                value=\"submit\"\r\n                            ></input>\r\n\r\n                            <button onClick={this.handleCancel}>Cancel </button>\r\n\r\n                        </div>\r\n                    </form>\r\n\r\n                </React.Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Edit;"]},"metadata":{},"sourceType":"module"}